module Main where

import Lib
import Perceptron
import AdalineGD
import Text.CSV (parseCSVFromFile)
import LinearClassifier
import TestData
import Data.Array.Repa hiding (map, foldr, traverse, zipWith)
import qualified Data.Array.Repa as R
import Data.Matrix as M

main :: IO ()
main = putStrLn "Hi"


andW  = M.fromList 3 1 [-3/2,1,1]  :: M.Matrix Double
orW   = M.fromList 3 1 [-1/2,1,1]  :: M.Matrix Double
nandW = M.fromList 3 1 [3/2,-1,-1] :: M.Matrix Double

verifyW :: (Bool -> Bool -> Bool) -> M.Matrix -> Bool
verifyW bo m = 
  where
    opres = [bo x y | x <- [True,False], y <- [True,False]]
    mres  = [M.fromList 1 3 [1,x,y] | x <- [1,0], y<-[1,0]]
    
